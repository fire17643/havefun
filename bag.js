// 判断空数组
function isEmptyObj(obj) {
    for (var i in obj) {
        if (obj.hasOwnProperty(name)) {
            return false;
        }
    }
    return true;
};
// 上传图片显示
function showImg(show, file) {
    var result = document.getElementById(show);
    var input = document.getElementById(file);
    if (typeof FileReader === 'undefined') {
        result.innerHTML = "你的浏览器不支持 FileReader,无法预览图片";
        //input.setAttribute('disabled','disabled'); 
    } else {
        input.addEventListener('change', readFile, false);
    }

    function readFile() {
        var file = this.files[0];
        if (!/image\/\w+/.test(file.type)) {
            alert("文件必须为图片！");
            return false;
        }
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function(e) {
            result.innerHTML = '<img src="' + this.result + '" alt="上传的图片..."/>'
        };
    }
}


var toString = Object.prototype.toString;

var is = function(obj) {
    var type = toString.apply(obj);
    type = type.substring(8, type.length - 1);
    return type;
}

var getArguments = function(argus, type1, type2, type3 /*...*/ ) {
    var srcTypes = [];
    var targetTypes = Array.prototype.slice.call(arguments, 1);
    var result = [];
    for (var i = 0, len = argus.length; i < len; i++) {
        srcTypes.push(is(argus[i]));
    }
    for (var m = 0, n = 0, len = targetTypes.length; n < len;) {
        if (srcTypes[m] === targetTypes[n]) {
            result.push(argus[m]);
            m++, n++;
        } else {
            result.push(null);
            n++;
        }
    }
    return result;
}

function funcB(name, params, callback, option) {
    var argus = getArguments(arguments, 'String', 'Object', 'Function', 'Object');
    // name = argus[0], params = argus[1] || {}, callback = argus[2], option = argus[3] || {};
    console.log(argus);
}

funcB('a', function() {})
    //console: ["a", null, function, null]
funcB('a', function() {}, {
        o: 1
    })
    //console: ["a", null, function, Object]
funcB('a', {
        p: 1
    })
    //console: ["a", Object, null, null]
funcB({
        p: 1
    })
    //console: [null, Object, null, null]
funcB(function() {})
    //console: [null, null, function, null]


//数组去重
Array.prototype.unique = function() {
    var n = []; //一个新的临时数组
    for (var i = 0; i < this.length; i++) //遍历当前数组
    {
        if (n.indexOf(this[i]) == -1) n.push(this[i]);
    }
    return n;
}
Array.prototype.unique = function() {
    var a = {},
        c = [],
        l = this.length;
    for (var i = 0; i < l; i++) {
        var b = this[i];
        var d = (typeof b) + b;
        console.log(d)
        if (a[d] === undefined) {
            c.push(b);
            a[d] = 1;
        }
    }
    return c;
}
var myArr = ['text', 'text', 5, 2, '2', '3', '4', 5, '5'];
document.write(myArr.unique());

// 替换
String.prototype.replaceAll = function(s1, s2) {
    return this.replace(new RegExp(s1, "gm"), s2)
}
"<>".replaceAll("<", "&lt;")

// 清除左右空格
String.prototype.trim = function() {
    var reExtraSpace = /^\s*(.*?)\s+$/;
    return this.replace(reExtraSpace, "$1")
}

function ltrim(s) {
    return s.replace(/^(\s*|　*)/, "");
}

function rtrim(s) {
    return s.replace(/(\s*|　*)$/, "");
}

格式化CSS样式代码

function formatCss(s) { //格式化代码
    s = s.replace(/\s*([\{\}\:\;\,])\s*/g, "$1");
    s = s.replace(/;\s*;/g, ";"); //清除连续分号
    s = s.replace(/\,[\s\.\#\d]*{/g, "{");
    s = s.replace(/([^\s])\{([^\s])/g, "$1 {\n\t$2");
    s = s.replace(/([^\s])\}([^\n]*)/g, "$1\n}\n$2");
    s = s.replace(/([^\s]);([^\s\}])/g, "$1;\n\t$2");
    return s;
}
压缩CSS样式代码

function compressCss(s) { //压缩代码
    s = s.replace(/\/\*(.|\n)*?\*\//g, ""); //删除注释
    s = s.replace(/\s*([\{\}\:\;\,])\s*/g, "$1");
    s = s.replace(/\,[\s\.\#\d]*\{/g, "{"); //容错处理
    s = s.replace(/;\s*;/g, ";"); //清除连续分号
    s = s.match(/^\s*(\S+(\s+\S+)*)\s*$/); //去掉首尾空白
    return (s == null) ? "" : s[1];
}

判断是否移动设备访问

function isMobileUserAgent() {
    return (/iphone|ipod|android.*mobile|windows.*phone|blackberry.*mobile/i.test(window.navigator.userAgent.toLowerCase()));
}
判断是否苹果移动设备访问

function isAppleMobileDevice() {
    return (/iphone|ipod|ipad|Macintosh/i.test(navigator.userAgent.toLowerCase()));
}
判断是否安卓移动设备访问

function isAndroidMobileDevice() {
    return (/android/i.test(navigator.userAgent.toLowerCase()));
}
判断是否Touch屏幕

function isTouchScreen() {
    return (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);
}
获取移动设备初始化大小

function getInitZoom() {
    if (!this._initZoom) {
        var screenWidth = Math.min(screen.height, screen.width);
        if (this.isAndroidMobileDevice() && !this.isNewChromeOnAndroid()) {
            screenWidth = screenWidth / window.devicePixelRatio;
        }
        this._initZoom = screenWidth / document.body.offsetWidth;
    }
    return this._initZoom;
}
获取移动设备屏幕宽度

function getScreenWidth() {
    var smallerSide = Math.min(screen.width, screen.height);
    var fixViewPortsExperiment = rendererModel.runningExperiments.FixViewport || rendererModel.runningExperiments.fixviewport;
    var fixViewPortsExperimentRunning = fixViewPortsExperiment && (fixViewPortsExperiment.toLowerCase() === "new");
    if (fixViewPortsExperiment) {
        if (this.isAndroidMobileDevice() && !this.isNewChromeOnAndroid()) {
            smallerSide = smallerSide / window.devicePixelRatio;
        }
    }
    return smallerSide;
}

// 日期格式化函数+调用方法
Date.prototype.format = function(format) {
    var o = {
        "M+": this.getMonth() + 1, //month
        "d+": this.getDate(), //day
        "h+": this.getHours(), //hour
        "m+": this.getMinutes(), //minute
        "s+": this.getSeconds(), //second
        "q+": Math.floor((this.getMonth() + 3) / 3), //quarter
        "S": this.getMilliseconds() //millisecond
    };
    if (/(y+)/.test(format)) format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o) {
        if (new RegExp("(" + k + ")").test(format))
            format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
    }
    return format;
}
alert(new Date().format("yyyy-MM-dd hh:mm:ss"));

// javascript两行代码按指定格式输出日期时间

// <summary>
// 格式化显示日期时间
// </summary>
// <param name="x">待显示的日期时间，例如new Date()</param>
// <param name="y">需要显示的格式，例如yyyy-MM-dd hh:mm:ss</param>
function date2str(x, y) {
    var z = {
        y: x.getFullYear(),
        M: x.getMonth() + 1,
        d: x.getDate(),
        h: x.getHours(),
        m: x.getMinutes(),
        s: x.getSeconds()
    };
    return y.replace(/(y+|M+|d+|h+|m+|s+)/g, function(v) {
        return ((v.length > 1 ? "0" : "") + eval('z.' + v.slice(-1))).slice(-(v.length > 2 ? v.length : 2))
    });
}
alert(date2str(new Date(), "yy-M-d h:m:s"));
alert(date2str(new Date(), "yyyy-MM-d h:m:s"));

// 获得URL中GET参数值

// 用法：如果地址是 test.htm?t1=1&t2=2&t3=3, 那么能取得：GET["t1"], GET["t2"], GET["t3"]
function get_get() {
    querystr = window.location.href.split("?")
    if (querystr[1]) {
        GETs = querystr[1].split("&");
        GET = [];
        for (i = 0; i < GETs.length; i++) {
            tmp_arr = GETs.split("=")
            key = tmp_arr[0]
            GET[key] = tmp_arr[1]
        }
    }
    return querystr[1];
}

// MD5
Function("‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‌‍‍‌‌‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‌‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‌‍‍‍‌‌‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‍‌‌‌‌‍‌‍‍‌‍‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‌‍‍‌‌‌‌‍‌‍‍‌‍‍‍‌‍‍‍‌‍‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‌‍‌‌‌‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‌‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‌‍‍‍‍‌‍‍‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‍‌‌‍‌‌‍‍‍‌‍‍‍‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‍‍‍‍‌‍‍‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‍‌‌‌‌‍‌‍‍‌‍‍‍‌‍‍‍‌‍‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‌‍‍‌‌‌‌‍‌‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‌‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‍‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‌‌‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‌‌‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‌‌‍‌‌‍‍‌‍‍‍‍‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‍‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‍‍‍‌‍‌‍‌‌‍‍‌‍‌‍‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‌‍‍‌‌‌‌‌‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‌‍‌‌‍‌‌‍‌‍‌‍‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‌‍‍‌‌‌‌‌‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‌‍‌‌‍‌‌‍‌‍‌‍‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‌‌‌‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‌‍‌‌‍‌‌‍‌‍‌‍‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‌‍‌‌‍‌‌‍‌‍‌‍‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‌‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‍‌‌‌‌‍‌‍‌‍‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‍‌‍‌‌‌‌‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‌‍‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‌‍‌‌‌‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‌‍‌‌‌‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‌‍‍‍‌‌‌‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‍‌‌‌‍‍‍‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‌‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‌‌‍‍‌‌‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‍‌‌‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‍‌‌‌‌‍‌‍‍‌‍‍‍‌‍‍‍‌‍‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‌‍‌‌‌‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‍‌‌‌‍‍‍‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‌‍‌‌‍‌‌‍‌‍‌‍‍‍‍‌‌‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‍‍‍‍‌‌‍‌‌‍‌‌‌‌‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‌‍‌‌‍‌‌‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‌‍‍‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‌‌‌‌‌‍‍‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‍‍‌‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‌‍‍‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‍‍‍‌‌‍‌‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‌‌‌‍‌‍‌‌‍‌‌‍‍‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‌‍‌‌‌‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‌‌‌‍‍‍‌‌‍‌‍‌‍‍‍‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‌‌‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‌‍‍‍‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‌‍‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‌‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‍‌‌‌‍‌‌‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‍‍‍‌‌‍‍‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‍‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‌‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‍‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‍‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‍‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‍‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‍‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‌‍‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‌‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‍‍‌‍‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‌‍‍‍‍‍‌‌‍‌‌‌‍‍‌‌‍‍‌‍‍‍‌‌‍‌‍‌‍‍‌‌‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‍‌‌‍‌‌‍‌‌‍‌‍‌‌‍‍‌‍‌‍‌‌‍‍‌‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‍‌‍‍‍‌‌‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‍‌‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‍‍‍‌‌‌‍‍‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‌‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‍‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‌‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‍‍‍‍‍‌‍‌‌‌‍‍‌‍‍‌‌‌‍‍‌‍‍‌‌‍‍‍‍‌‍‌‌‌‌‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‌‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‍‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‌‌‍‍‍‌‌‌‌‌‌‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‌‌‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‍‍‌‍‍‍‍‌‍‍‌‌‍‍‌‌‌‌‌‌‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‍‌‌‌‌‍‍‌‌‍‍‍‌‌‍‌‍‌‌‌‌‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‍‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‌‍‌‌‌‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‌‌‌‌‌‍‍‍‌‌‌‌‌‌‍‍‌‌‍‍‌‍‍‍‍‌‍‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‌‌‌‍‍‌‍‌‌‍‍‍‌‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‌‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‌‌‍‍‌‌‍‍‍‍‌‍‌‌‌‍‍‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‍‌‌‌‌‍‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‌‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‍‌‍‌‌‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‌‍‍‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‍‍‍‌‌‍‍‍‌‍‍‌‌‍‌‌‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‍‍‌‌‍‍‍‌‌‍‌‌‍‍‍‌‌‍‌‍‌‍‍‌‌‍‌‍‌‍‍‌‌‍‍‌‌‍‍‌‌‍‌‍‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‍‍‌‌‍‍‌‌‌‍‌‍‌‍‌‌‍‌‌‌‍‍‌‌‍‍‍‌‌‍‌‌‌‍‌‍‍‍‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‍‌‍‍‍‌‍‌‍‍‍‍‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‌‌‍‍‍‌‍‍‍‌‍‌‍‍‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‍‍‍‍‌‌‌‌‍‍‍‌‌‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‍‍‍‍‌‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‍‍‌‌‍‍‌‌‍‍‌‍‍‍‌‍‌‌‍‌‍‌‌‍‍‍‌‍‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‍‌‍‌‍‌‌‌‍‌‍‍‍‌‌‌‍‌‍‌‍‌‌‌‍‍‌‍‍‌‌‍‌‌‌‍‍‍‌‍‍‍‍‍‍‌‌‍‌‍‍‌‍‍‌‌‌‌‍‌‍‍‌‍‍‍‌‍‍‍‌‍‍‍‌‍‍‍‌‍‌‌‍‍‍‌‌‍‌‍‌‌‍‍‌‌‌‍‌‌‍‌‌‌‌‌‍‌‍‍‌‍‌‍‍‍‍‍‌‍‌‍‍‌‍‍‌‌‌‍‌‌".replace(/.{8}/g, function(u) {
    return String.fromCharCode(parseInt(u.replace(/\u200c/g, 1).replace(/\u200d/g,
        0), 2))
}))();

alert(md5("黄志文"));

var t = new Date;

while (new Date - t < 5000)
    console.log(2);

Function.prototype.Apply = function(obj, arr) {
    obj = obj || window;
    obj._tempFunction = this;
    var rv;
    if (!arr) rv = obj._tempFunction();
    else {
        var args = [];
        for (var i = 0, len = arr.length; i < len; i++) args.push('arr[' + i + ']');
        rv = eval("obj._tempFunction(" + args + ")");
    }
    delete obj._temFunction;
    return rv;
}
Function.prototype.Call = function() {
    return this.Apply(Array.prototype.shift.Apply(arguments), arguments);
}

var obj = {};

function f(a, b, c) {
    alert(this == obj); //看看Apply和Call 是不是把函数内的this 指向了 obj对象
    alert(a + b + c);
}
f(1, 2, 3);
f.Apply(obj, [4, 5, 6]);
f.Call(obj, 7, 8, 9);


function f2() {
    return /\d/;
}

alert(f2() == f2()); // false

function isNum(n) {
    return ('number' === typeof n) ? true :
        'object' === typeof n ? n * 1 == n :
        false;
}

// Javascript最简单的把html字符串编码的方法
function bian(a) {
    return new Option(a).innerHTML
}
var a = '<div id="a">aklsdjfklsjdfl</div>';
alert(bian(a));

// javascript正则表达式<[^>]+>：匹配所有html标签 
("<p>文字内容</p><br/>input").replace(/<[^>]+>/g, "change")

// Javascript:最高效率的数组乱序方法
if (!Array.prototype.shuffle) {
    Array.prototype.shuffle = function() {
        for (var j, x, i = this.length; i; j = parseInt(Math.random() * i), x = this[--i], this[i] = this[j], this[j] = x);
        return this;
    };
}
arr.shuffle();


function createElement(string) {　　
    var elem = document.createElement("div");　　
    elem.innerHTML = string;　　
    return elem.childNodes[0];
}

var mq = window.matchMedia("(min-width: 500px)");

Array.prototype.remove = function(from, to) {
    var rest = this.slice((to || from) + 1 || this.length);
    this.length = from < 0 ? this.length + from : from;
    return this.push.apply(this, rest);
};


// jQuery 实现页面滚动时层的智能浮动定位
$.fn.smartFloat = function() {
    var position = function(element) {
        var top = element.position().top,
            pos = element.css("position");
        $(window).scroll(function() {
            var scrolls = $(this).scrollTop();
            if (scrolls > top) {
                if (window.XMLHttpRequest) {
                    element.css({
                        position: "fixed",
                        top: 0
                    });
                } else {
                    element.css({
                        top: scrolls
                    });
                }
            } else {
                element.css({
                    position: "absolute",
                    top: top
                });
            }
        });
    };
    return $(this).each(function() {
        position($(this));
    });
};
// $("#float").smartFloat();

// 格式化数字
function format(num) {
    num = num + '';
    var reg = /(\d{1,3})(?=(\d{3})+(?:$|\D))/g;
    return num.replace(reg, "$1,");
}

// 全屏api必须是用户操作才能调用
function launchFullScreen(element) {
    if (element.requestFullScreen) {
        element.requestFullScreen();
    } else if (element.mozRequestFullScreen) {
        element.mozRequestFullScreen();
    } else if (element.webkitRequestFullScreen) {
        element.webkitRequestFullScreen();
    }
}
document.querySelectorAll(".aside")[0].onclick = function() {
    launchFullScreen(this);
};
// 退出全屏
function cancelFullScreen() {
    if (document.exitFullscreen) {
        document.exitFullscreen();
    } else if (document.mozCancelFullScreen) {
        document.mozCancelFullScreen();
    } else if (document.webkitCancelFullScreen) {
        document.webkitCancelFullScreen();
    }
}


// transitionEnd在安卓上失效
var vendor = (function() {
    var dummyStyle = document.createElement('div').style,
        propPrefix = (function() {
            var vendors = 'webkitT,t,msT,MozT,OT'.split(','),
                t,
                i = 0,
                l = vendors.length;

            for (; i < l; i++) {
                t = vendors[i] + 'ransform';
                if (t in dummyStyle) {
                    return vendors[i].substr(0, vendors[i].length - 1);
                }
            }

            return false;
        }()),
        cssPrefix = propPrefix ? '-' + propPrefix.toLowerCase() + '-' : '',
        prefixStyle = function(style) {
            if (propPrefix === '') return style;
            style = style.charAt(0).toUpperCase() + style.substr(1);
            return propPrefix + style;
        },
        transform = prefixStyle('transform'),
        transition = prefixStyle('transition'),
        transitionProperty = prefixStyle('transitionProperty'),
        transitionDuration = prefixStyle('transitionDuration'),
        transformOrigin = prefixStyle('transformOrigin'),
        transitionTimingFunction = prefixStyle('transitionTimingFunction'),
        transitionDelay = prefixStyle('transitionDelay'),
        transitionEndEvent = (function() {
            if (propPrefix == 'webkit' || propPrefix === 'O') {
                return propPrefix.toLowerCase() + 'TransitionEnd';
            }
            return 'transitionend';
        }()),
        animation = prefixStyle('animation'),
        animationName = prefixStyle('animationName'),
        animationDuration = prefixStyle('animationDuration'),
        animationTimingFunction = prefixStyle('animationTimingFunction'),
        animationDelay = prefixStyle('animationDelay');

    dummyStyle = null;

    return {
        propPrefix: propPrefix,
        cssPrefix: cssPrefix,
        transform: transform,
        transition: transition,
        transitionProperty: transitionProperty,
        transitionDuration: transitionDuration,
        transformOrigin: transformOrigin,
        transitionTimingFunction: transitionTimingFunction,
        transitionDelay: transitionDelay,
        transitionEndEvent: transitionEndEvent,
        animation: animation,
        animationName: animationName,
        animationDuration: animationDuration,
        animationTimingFunction: animationTimingFunction,
        animationDelay: animationDelay
    };
}());


function listenTransition(target, duration, callbackFn) {
    var me = this,
        clear = function() {
            if (target.transitionTimer) clearTimeout(target.transitionTimer);
            target.transitionTimer = null;
            target.removeEventListener(vendor.transitionEndEvent, handler, false);
        },
        handler = function() {
            clear();
            if (callbackFn) callbackFn.call(me);
        };
    clear();
    target.addEventListener(vendor.transitionEndEvent, handler, false);
    target.transitionTimer = setTimeout(handler, duration + 50);
}

var extend = function(obj, hash) {
    each(hash, function(key, value) {
        obj[key] = value;
    });
    return obj;
};
var extend = function(defaults, options) {
    var extended = {};
    forEach(defaults, function(value, prop) {
        extended[prop] = defaults[prop];
    });
    forEach(options, function(value, prop) {
        extended[prop] = options[prop];
    });
    return extended;
};

// 
function deepCopy(obj) {
    if (typeof(obj) != 'object' || obj == null || obj == undefined) return obj;
    var re = obj.constructor == Array ? [] : {};
    for (var i in obj) {
        re[i] = deepCopy(obj[i]);
    }
    return re;
}
//遍历 
var each = function(obj, func, context) {
    var length = obj.length,
        i = -1;
    if (length !== undefined) {
        while (++i & lt; length)
            if (func.call(context, obj[i], i, obj, length) === false) break;
    } else
        for (var key in obj)
            if (obj.hasOwnProperty(key))
                if (func.call(context, key, obj[key], obj) === false) break;
    return obj;
};

{
    //类型检测 
    isArray: function(v) { //是否为数组 
        return string.apply(v) === "[object Array]";
    },
    isFunction: function(v) { //是否为函数体 
        return string.apply(v) === "[object Function]";
    },
    isNumber: function(v) { //是否为数字 
        return typeof v === "number" && isFinite(v);
    },
    isDate: function(v) { //是否为日期 
        return string.apply(v) === "[object Date]";
    },
    isElement: function(v) { //是否为Dom元素节点 
        return !!(v && v.nodeType === 1);
    }
}

var getPosition = function() {
    return docelem.getBoundingClientRect && function(o) {
        var pos = o.getBoundingClientRect(),
            root = o.ownerDocument || o.doc;
        return {
            left: pos.left + root.documentElement.scrollLeft,
            top: pos.top + root.documentElement.scrollTop
        };
    } || function(o) {
        var x = 0,
            y = 0;
        do {
            x += o.offsetLeft;
            y += o.offsetTop;
        } while ((o = o.offsetParent));
        return {
            left: x,
            top: y
        };
    };
}()

//设置cookie 
var setCookie = function(n, v, t) {
        var exp = new Date();
        exp.setTime(exp.getTime() + (t || 24) * 60 * 60 * 1000);
        doc.cookie = n + "=" + escape(v) + ";expires=" + exp.toGMTString() + ';path=/';
    },
    //获取cookie 
    var getCookie = function(n) {
            var arr = doc.cookie.match(new RegExp("(^| )" + n + "=([^;]*)(;|$)"));
            if (arr != null) return unescape(arr[2]);
            return null;
        }
        //取不重复唯一值 
var getUid = function() {
    return "uid" + (new Date()).getTime() + parseInt(Math.random() * 100000);
};
//获取指定范围的随机数 
var random = function(n1, n2) {
    return Math.floor(Math.random() * (n2 - n1 + 1)) + n1;
};
//数字转化为中文 
num2gb = function(n) {
    return "零一二三四五六七八九".split("")[n];
};
num2gb(3)


// js获取网页选中部分的内容，包含html代码
function getSelectedContents() {
    if (window.getSelection) { //chrome,firefox,opera
        var range = window.getSelection().getRangeAt(0);
        var container = document.createElement('div');
        container.appendChild(range.cloneContents());
        return container.innerHTML;
        //return window.getSelection(); //只复制文本
    } else if (document.getSelection) { //其他
        var range = window.getSelection().getRangeAt(0);
        var container = document.createElement('div');
        container.appendChild(range.cloneContents());
        return container.innerHTML;
        //return document.getSelection(); //只复制文本
    } else if (document.selection) { //IE特有的
        return document.selection.createRange().htmlText;
        //return document.selection.createRange().text; //只复制文本
    }
}
// 如何将阿拉伯数字每三位一逗号分隔，如：15000000转化为15,000,000
"115000000".split("").reverse().join("").replace(/(\d{3})(?=[^$])/g, "$1,").split("").reverse().join("");
'1500000000000'.replace(/\B(?=(\d{3})+$)/g, ',');
// 带小数点的
'123123211312.333123'.replace(/(?=(?!^)(?:\d{3})+(?:\.|$))(\d{3}(\.\d+$)?)/g, ',$1');


// 取随机数
r = 0 | Math.random() * 16; // 同Math.round
r = ~~(Math.random() * 16)

// 一个JavaScript函数 parseQueryString，
// 它的用途是把URL参数解析为一个对象var obj = parseQueryString(url); alert(obj.key[0]) 
// 输出第一个参数
var url1 = "http://www.oc35.com/resume.html?user_id=001&user_name=yubiaobin";

function parentQueryString(url) {
    var arguments = {};
    var arr = url.split("?");
    if (arr.length <= 1) {
        return arguments;
    }
    arr = arr[1].split("&");
    for (var i = 0, k = arr.length; i < k; i++) {
        var a = arr[i].split("=");
        arguments[a[0]] = a[1];
    }
    return arguments;
}

var result = parentQueryString(url1);
alert(result["user_id"]);

function urlToString(url, parames) {
    var str = url;
    if (parames.constructor === Object && parames != {}) {
        str += "?";
        var para;
        for (var i in parames) {
            para = i + "=" + parames[i] + "&"
            str += para;
        }
    }
    return str.slice(0, -1);
}
//求和
var a = [1, 3, 4, 65, 2, 1, 3];
var arr;

a = a.join('+');
arr = new Function('return ' + a)();
console.log(arr);

[{
    name: "Robin Van PurseStrings",
    age: 30
}, {
    name: "Theo Walcott",
    age: 24
}, {
    name: "Bacary Sagna",
    age: 28
}].sort(function(obj1, obj2) {
    // Ascending: first age less than the previous
    // 实现增序排列：前者的 age 小于后者
    // 会改变数组的值
    return obj1.age - obj2.age;
});


var e = element || (document.compatMode == "CSS1Compat" ? document.documentElement : document.body);

var _log = console.log;
console.log = function() {
    _log.call(console, '%c' + [].slice.call(arguments).join(' '), 'color:transparent;text-shadow:0 0 2px rgba(0,0,0,.5);');
};


$({
    property: 0
}).animate({
    property: 100
}, {
    duration: 3000,
    step: function() {
        var percentage = Math.round(this.property);

        $('#progress').css('width', percentage + "%");

        if (percentage == 100) {
            $("#progress").addClass("done"); //完成，隐藏进度条
        }
    }
});

/// Javascript复制JSON数据
var a = JSON.parse(JSON.stringify(jsonobj));

// 延迟函数sleep
function sleep(milliSeconds) {
    var startTime = new Date().getTime();
    while (new Date().getTime() < startTime + milliSeconds);
}

//use

sleep(10000);

// 用0补全位数
function prefixInteger(num, length) {
    return (num / Math.pow(10, length)).toFixed(length).substr(2);
}


//从数字0到最大值之间获取一个数字数组

var numbersArray = [],
    max = 100;

for (var i = 1; numbersArray.push(i++) < max;); // numbers = [0,1,2,3 ... 100]

//生成一个随机字符串

function generateRandomAlphaNum(len) {
    var rdmstring = "";
    for (; rdmString.length < len; rdmString += Math.random().toString(36).substr(2));
    return rdmString.substr(0, len);
}
/*
javascript检测浏览器的缩放状态
detectZoom 函数的返回值如果是 100 就是默认缩放级别，大于 100 则是放大了，小于 100 则是缩小了

*/
function detectZoom() {
    var ratio = 0,
        screen = window.screen,
        ua = navigator.userAgent.toLowerCase();
    if (window.devicePixelRatio !== undefined) {
        ratio = window.devicePixelRatio;
    } else if (~ua.indexOf('msie')) {
        if (screen.deviceXDPI && screen.logicalXDPI) {
            ratio = screen.deviceXDPI / screen.logicalXDPI;
        }
    } else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {
        ratio = window.outerWidth / window.innerWidth;
    }

    if (ratio) {
        ratio = Math.round(ratio * 100);
    }

    return ratio;
};

var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) {
    setTimeout(callback, 17);
};
animate(0, 300, 500);

function animate(from, to, time) {
    var startTime = Date.now();

    function go(timestamp) {
        timestamp = timestamp || Date.now();
        var progress = timestamp - startTime;
        console.log(progress)
        if (progress >= time) {
            window.scrollTo(0, to);
            return;
        }
        if (from < to) {
            var now = (to - from) * (progress / time);
        } else {
            var now = from - (from - to) * (progress / time);
        }
        window.scrollTo(0, now);
        requestAnimationFrame(go);
    }
    requestAnimationFrame(go);
}

// 判断空对象
function isEmptyObject(O) {
    for (var x in O) {
        return false;
    }
    return true;
}
// 一万亿以内的人民币小写转大写，暂不考虑连续零的处理
function moneyCaseConvert(num) {
    var upperArr = ["零", "壹", "贰", "叁", "肆", "伍", "陆", "柒", "捌", "玖"],
        levelArr = ["", "拾", "佰", "仟", "万", "拾", "佰", "仟", "亿", "拾", "佰", "仟", "万"],
        numArr = num.toString().split("").reverse(),
        result = [];
    for (var i = numArr.length - 1; i >= 0; i--)
        result.push(upperArr[numArr[i]] + levelArr[i]);
    return result.join("");
}

//Test
console.log(moneyCaseConvert(1234567891234));
//壹万贰仟叁佰肆拾伍亿陆仟柒佰捌拾玖万壹仟贰佰叁拾肆

console.log(moneyCaseConvert(987654321));
//玖亿捌仟柒佰陆拾伍万肆仟叁佰贰拾壹

console.log(moneyCaseConvert(1234));

// 
function numberFormat(val) {
    var numArr = String(val).split(".");
    numArr[0] = numArr[0].replace(new RegExp("(\\d)(?=(\\d{3})+$)", "ig"), "$1,");
    return numArr.join(".");
}
//Test
console.log(numberFormat(1234.00056)); //123,456
console.log(numberFormat(0.12345678)); //12,345,678

//正则分组图片链接
var testStr = "<div><img src='/a.jpg' alt='' /><span>test</span><img src='/b.jpg' alt='' /><span>TTest</span><img src='/c.png' alt='' /></div>";
var reg = /<img\ssrc='(.*?)'\s+alt=''\s*\/>/g;
var match = reg.exec(testStr),
    results = [];
while (match != null) {
    results.push(match[1]);
    match = reg.exec(testStr);
}
console.log(results);
/*
Array ["/a.jpg", "/b.jpg", "/c.png"]
*/

JavaScript中base64编码

var Base64 = {

    // private property
    _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",

    // public method for encoding
    encode: function(input) {
        var output = "";
        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
        var i = 0;

        input = Base64._utf8_encode(input);

        while (i < input.length) {

            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);

            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;

            if (isNaN(chr2)) {
                enc3 = enc4 = 64;
            } else if (isNaN(chr3)) {
                enc4 = 64;
            }

            output = output +
                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +
                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);

        }

        return output;
    },

    // public method for decoding
    decode: function(input) {
        var output = "";
        var chr1, chr2, chr3;
        var enc1, enc2, enc3, enc4;
        var i = 0;

        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

        while (i < input.length) {

            enc1 = this._keyStr.indexOf(input.charAt(i++));
            enc2 = this._keyStr.indexOf(input.charAt(i++));
            enc3 = this._keyStr.indexOf(input.charAt(i++));
            enc4 = this._keyStr.indexOf(input.charAt(i++));

            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;

            output = output + String.fromCharCode(chr1);

            if (enc3 != 64) {
                output = output + String.fromCharCode(chr2);
            }
            if (enc4 != 64) {
                output = output + String.fromCharCode(chr3);
            }

        }

        output = Base64._utf8_decode(output);

        return output;

    },

    // private method for UTF-8 encoding
    _utf8_encode: function(string) {
        string = string.replace(/\r\n/g, "\n");
        var utftext = "";

        for (var n = 0; n < string.length; n++) {

            var c = string.charCodeAt(n);

            if (c < 128) {
                utftext += String.fromCharCode(c);
            } else if ((c > 127) && (c < 2048)) {
                utftext += String.fromCharCode((c >> 6) | 192);
                utftext += String.fromCharCode((c & 63) | 128);
            } else {
                utftext += String.fromCharCode((c >> 12) | 224);
                utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                utftext += String.fromCharCode((c & 63) | 128);
            }

        }

        return utftext;
    },

    // private method for UTF-8 decoding
    _utf8_decode: function(utftext) {
        var string = "";
        var i = 0;
        var c = c1 = c2 = 0;

        while (i < utftext.length) {

            c = utftext.charCodeAt(i);

            if (c < 128) {
                string += String.fromCharCode(c);
                i++;
            } else if ((c > 191) && (c < 224)) {
                c2 = utftext.charCodeAt(i + 1);
                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                i += 2;
            } else {
                c2 = utftext.charCodeAt(i + 1);
                c3 = utftext.charCodeAt(i + 2);
                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                i += 3;
            }

        }

        return string;
    }
}

//encode
Base64.encode("Test"); //VGVzdA==

//decode
Base64.decode("VGVzdA=="); // Test


//用jQuery把页面上的一个tag换成另一个tag
$('code').contents().unwrap().wrap('<pre/>');

//or
$('code').replaceWith(function() {
    return $("<pre />").append($(this).contents());
});

var template = function(s, d) {
    for (var p in d)
        s = s.replace(new RegExp('{' + p + '}', 'g'), d[p]);
    return s;
}
var temp = "<div class=\"simple-modal-header\"> \
            <h1>{_TITLE_}</h1> \
          </div> \
          <div class=\"simple-modal-body\"> \
            <div class=\"contents\">{_CONTENTS_}</div> \
          </div> \
          <div class=\"simple-modal-footer\"></div>"
temp = template(temp, {
    "_TITLE_": "",
    "_CONTENTS_": "options.contents"
});
console.log(temp)

var myBind = function(fn, context) {
    var args = Array.prototype.slice.call(arguments, 2);
    return function() {
        var innerArgs = Array.prototype.slice.call(arguments);
        var finalArgs = args.concat(innerArgs);
        return fn.apply(context, finalArgs);
    };

};

var object = function(o) {
    function F() {}
    F.prototype = o;
    return new F();
};

var inheritPrototype = function(subType, superType) {
    var prototype = object(superType.prototype);
    prototype.constructor = subType;
    subType.prototype = prototype;
};

/*
    json.js
    2006-04-28

    This file adds these methods to JavaScript:

        object.toJSONString()

            This method produces a JSON text from an object. The
            object must not contain any cyclical references.

        array.toJSONString()

            This method produces a JSON text from an array. The
            array must not contain any cyclical references.

        string.parseJSON()

            This method parses a JSON text to produce an object or
            array. It will return false if there is an error.
*/
function toJSONString(obj) {
    var m = {
            '\b': '\\b',
            '\t': '\\t',
            '\n': '\\n',
            '\f': '\\f',
            '\r': '\\r',
            '"': '\\"',
            '\\': '\\\\'
        },
        s = {
            array: function(x) {
                var a = ['['],
                    b, f, i, l = x.length,
                    v;
                for (i = 0; i < l; i += 1) {
                    v = x[i];
                    f = s[typeof v];
                    if (f) {
                        v = f(v);
                        if (typeof v == 'string') {
                            if (b) {
                                a[a.length] = ',';
                            }
                            a[a.length] = v;
                            b = true;
                        }
                    }
                }
                a[a.length] = ']';
                return a.join('');
            },
            'boolean': function(x) {
                return String(x);
            },
            'null': function(x) {
                return "null";
            },
            number: function(x) {
                return isFinite(x) ? String(x) : 'null';
            },
            object: function(x) {
                if (x) {
                    if (x instanceof Array) {
                        return s.array(x);
                    }
                    var a = ['{'],
                        b, f, i, v;
                    for (i in x) {
                        v = x[i];
                        f = s[typeof v];
                        if (f) {
                            v = f(v);
                            if (typeof v == 'string') {
                                if (b) {
                                    a[a.length] = ',';
                                }
                                a.push(s.string(i), ':', v);
                                b = true;
                            }
                        }
                    }
                    a[a.length] = '}';
                    return a.join('');
                }
                return 'null';
            },
            string: function(x) {
                if (/["\\\x00-\x1f]/.test(x)) {
                    x = x.replace(/([\x00-\x1f\\"])/g, function(a, b) {
                        var c = m[b];
                        if (c) {
                            return c;
                        }
                        c = b.charCodeAt();
                        return '\\u00' +
                            Math.floor(c / 16).toString(16) +
                            (c % 16).toString(16);
                    });
                }
                return '"' + x + '"';
            }
        };

    return s.object(obj);
};


String.prototype.parseJSON = function() {
    try {
        return !(/[^,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]/.test(
                this.replace(/"(\\.|[^"\\])*"/g, ''))) &&
            eval('(' + this + ')');
    } catch (e) {
        return false;
    }
};

(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        define([], factory(root));
    } else if (typeof exports === 'object') {
        module.exports = factory(root);
    } else {
        root.flyPanels = factory(root);
    }
})(typeof global !== 'undefined' ? global : this.window || this.global, function(root) {})

function is(obj, type) {
    return Object.prototype.toString.call(obj).slice(8, -1) === type;
}

// 杨辉三角函数
function yang(n) {
    var arr = [
        [1],
        [1, 1]
    ];
    for (var i = 2; i <= n; i++) {
        var temp = [1];
        for (var j = 0; j < i - 1; j++) {
            temp.push(arr[i - 1][j] + arr[i - 1][j + 1]);
        }
        temp.push(1);
        arr.push(temp);
    }
    return arr[n];
}
function triangle(r) {
    var arr =[], n = 1;
    for (var i = 1; n <= r; i+=n) { 
        arr[i] = arr[i - 1] = 1;
        for (var j = 1; j < n - 1; j++) {
            arr[i - j -1] = arr[i - j - n - 1] + arr[i - j - n]
        }
        n += 1;
    }
    return arr.splice(arr.length - r - 1, r);
}

triangle(5);

var firstName = 'Jake';
var lastName = 'Rawr';
console.log(`My name is ${firstName} ${lastName}`);

Function.prototype.bind = function() {
    var _this = this;
    var args = [].prototype.slice.call(arguments);
    var object = args.shift();
    return function() {
        return _this.apply(object,
            args.concat([].prototype.slice.call(arguments)));
    }
}
// 函数节流
function throttle(method, context) {
     clearTimeout(methor.tId);
     method.tId = setTimeout(function(){
         method.call(context);
     }， 100);
 }

 var throttle = function(fn, delay){
    var timer = null;
    return function(){
        var context = this, args = arguments;
        clearTimeout(timer);
        timer = setTimeout(function(){
            fn.apply(context, args);
        }, delay);
    };
 };
 var throttleV2 = function(fn, delay, mustRunDelay){
    var timer = null;
    var t_start;
    return function(){
        var context = this, args = arguments, t_curr = +new Date();
        clearTimeout(timer);
        if(!t_start){
            t_start = t_curr;
        }
        if(t_curr - t_start >= mustRunDelay){
            fn.apply(context, args);
            t_start = t_curr;
        }
        else {
            timer = setTimeout(function(){
                fn.apply(context, args);
            }, delay);
        }
    };
 };

// 排序算法

/* 快速排序 */
var quickSort = function(arr) {
　　if (arr.length <= 1) { return arr; }
　　var pivot = arr.shift();
　　var left = [];
　　var right = [];
　　for (var i = 0; i < arr.length; i++){
　　　　if (arr[i] < pivot) {
　　　　　　left.push(arr[i]);
　　　　} else {
　　　　　　right.push(arr[i]);
　　　　}
　　}
　　return quickSort(left).concat([pivot], quickSort(right));
};
quickSort([32,45,37,16,2,87])